<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD  Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lgl.mapper.CommentMapper">
    <resultMap id="CommentWithLikeDTO" type="com.lgl.model.CommentWithLikeDTO">
        <id property="commentId" column="commentId"/>
        <result property="knowledgeId" column="knowledgeId"/>
        <result property="userId" column="userId"/>
        <result property="parentCommentId" column="parentCommentId"/>
        <result property="commentContent" column="commentContent"/>
        <result property="createTime" column="createTime"/>
        <result property="likeCount" column="likeCount"/>
        <result property="likedByCurrentUser" column="likedByCurrentUser"/>
    </resultMap>

    <select id="getCommentsByKnowledgeId" resultMap="CommentWithLikeDTO">
        SELECT
            c.commentId,
            c.knowledgeId,
            c.userId,
            c.parentCommentId,
            c.commentContent,
            c.createTime,
            COUNT(l.likeId)  AS likeCount,
            CASE WHEN EXISTS (
                SELECT 1 FROM LikeTable l2
                WHERE l2.commentId  = c.commentId  AND l2.userId  = #{currentUserId}
            ) THEN 1 ELSE 0 END AS likedByCurrentUser
        FROM
            CommentTable c
                LEFT JOIN
            LikeTable l ON c.commentId  = l.commentId
        WHERE
            c.knowledgeId  = #{knowledgeId}
        GROUP BY
            c.commentId,  c.knowledgeId,  c.userId,  c.parentCommentId,  c.commentContent,  c.createTime
        ORDER BY
            c.createTime  ASC
    </select>
</mapper>